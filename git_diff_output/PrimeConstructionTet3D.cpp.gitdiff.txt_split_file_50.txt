chatGPTInstruction:0diff --git a/mesh/PrimeConstructionTet3D.cpp b/mesh/PrimeConstructionTet3D.cpp
index b721d40..2b7d510 100644
--- a/mesh/PrimeConstructionTet3D.cpp
+++ b/mesh/PrimeConstructionTet3D.cpp
@@ -1,9 +1,13 @@
+#include "PrimeConstructionTet3D.h"
+#include "PrimeFileIO.h"
+#include <chrono>
+#include <string>
 
-// Â© 2022 ANSYS, Inc. and/or its affiliated companies.
-// All rights reserved.
-// Unauthorized use, distribution, or reproduction is prohibited.
+#define SUCCESS 0
+#define MAX_NAME_LENGTH 100
+#define NULLP(p) ((p) == NULL)
 
-#include "PrimeConstructionTet3D.h"
+/*REQUIRED FUNCTIONS END*/ /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
 PrimeConstructionTet3D::PrimeConstructionTet3D(std::shared_ptr<OccDataStructure> occDataStruct)
     : Cm2ConstructionTet3D(occDataStruct)
@@ -13,6 +17,44 @@ PrimeConstructionTet3D::PrimeConstructionTet3D(std::shared_ptr<OccDataStructure>
 
 PrimeConstructionTet3D::~PrimeConstructionTet3D() {}
 
+void PrimeConstructionTet3D::updateShapeQualities()
+{
+    int ret_tet = cm2::meshtools::shape_qualities(m_tetData.pos, m_tetData.connectM, cm2::element_type::CM2_TETRA4, m_tetData.shape_qualities);
+    if (ret_tet == 0)
+    {
+        int iNumbOfElems = m_tetData.shape_qualities.size();
+        cm2::DoubleVec useShapeQualities(iNumbOfElems + 2);
+        useShapeQualities[iNumbOfElems] = 0.0;
+        useShapeQualities[iNumbOfElems + 1] = 1.0;
+        for (int i = 0; i < iNumbOfElems; i++)
+        {
+            m_tetData.shape_qualities[i] = std::fabs(m_tetData.shape_qualities[i]);
+            useShapeQualities[i] = std::fabs(m_tetData.shape_qualities[i]);
+        }
+
+        size_t binSize = 10;
+        m_tetData.histo_Qs.reinit(binSize, m_tetData.shape_qualities);
+        m_dAverageCellQuality = m_tetData.histo_Qs.mean_value();
+        m_dWorstCellQuality = m_tetData.histo_Qs.min_value();
+
+        m_tetData.histo_Qs.reinit(binSize, useShapeQualities);
+    }
+}
+
+void PrimeConstructionTet3D::updateAncestorsAndNeighbours()
+{
+    m_tetData.ancestors.clear(); // fucntionalize them
+    int ret = cm2::meshtools::get_ancestors(m_tetData.connectM, m_tetData.ancestors);
+    if (ret != 0)
+        m_occData->addMsg("get_ancestors: The " + std::to_string(ret) + " -th argument had an illegal value ", CADErrorHandler::GetAncestors);
+
+    m_tetData.neighbors.clear();
+    bool accept_multiple_neighbors = false;
+    int ret1 = cm2::meshtools::get_neighbors(m_tetData.connectM, cm2::CM2_TETRA4, accept_multiple_neighbors, m_tetData.neighbors);
+    if (ret1 != 0)
+        m_occData->addMsg("get_neighbors: The " + std::to_string(ret1) + " -th argument had an illegal value )", CADErrorHandler::GetNeighbors);
+}
