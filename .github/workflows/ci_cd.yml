name: CI
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  MAIN_PYTHON_VERSION: '3.11'
  LIBRARY_NAME: 'review-bot'
  LIBRARY_NAMESPACE: 'review_bot'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  code-style:
    name: "Code style"
    runs-on: ubuntu-latest
    steps:
      - uses: pyansys/actions/code-style@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  # doc-style:
  #   name: "Documentation style"
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: pyansys/actions/doc-style@v4
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}

  tests:
    name: "Tests"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
       os: [ubuntu-latest]
       python-version: ['3.11']
      fail-fast: false
    steps:
      - uses: pyansys/actions/tests-pytest@v4
        with:
          pytest-extra-args: "--cov=review_bot --cov-report=term --cov-report=html:.cov/html"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPEN_AI_TOKEN: ${{ secrets.OPEN_AI_TOKEN }}

  # doc-build:
  #   name: "Build documentation"
  #   runs-on: ubuntu-latest
  #   needs: [doc-style]
  #   steps:
  #     - uses: pyansys/actions/doc-build@v4
  #       with:
  #         python-version: ${{ env.MAIN_PYTHON_VERSION }}

  # build-library:
  #   name: "Build library basic example"
  #   runs-on: ubuntu-latest
  #   needs: [doc-build, tests]
  #   steps:
  #     - uses: pyansys/actions/build-library@v4
  #       with:
  #         library-name: ${{ env.LIBRARY_NAME }}
  #         python-version: ${{ env.MAIN_PYTHON_VERSION }}

  # doc-deploy-dev:
  #   name: "Deploy development documentation"
  #   runs-on: ubuntu-latest
  #   needs: [build-library]
  #   if: github.event_name == 'push' && !contains(github.ref, 'refs/tags')
  #   steps:
  #     - uses: pyansys/actions/doc-deploy-dev@v4
  #       with:
  #         cname: ${{ env.DOCUMENTATION_CNAME }}
  #         token: ${{ secrets.GITHUB_TOKEN }}

  # doc-deploy-stable:
  #   name: "Deploy stable documentation"
  #   runs-on: ubuntu-latest
  #   needs: [build-library]
  #   if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
  #   steps:
  #     - uses: pyansys/actions/doc-deploy-stable@v4
  #       with:
  #         cname: ${{ env.DOCUMENTATION_CNAME }}
  #         token: ${{ secrets.GITHUB_TOKEN }}


