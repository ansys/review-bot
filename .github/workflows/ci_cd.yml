name: GitHub CI/CD
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  MAIN_PYTHON_VERSION: '3.11'
  LIBRARY_NAME: 'review-bot'
  # TODO: We need to request an Ansys-based CNAME... This involves
  # interaction with IT. Not done right away. Temporal solution
  DOCUMENTATION_CNAME: 'ansys-internal.github.io/review-bot'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  code-style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - uses: ansys/actions/code-style@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  doc-style:
    name: Documentation style
    runs-on: ubuntu-latest
    steps:
      - uses: ansys/actions/doc-style@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  smoke-tests:
    name: Build and smoke tests
    runs-on: ${{ matrix.os }}
    needs: [code-style]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
        should-release:
          - ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags') }}
        exclude:
          - should-release: false
            os: macos-latest
    steps:
      - name: Build wheelhouse and perform smoke test
        uses: ansys/actions/build-wheelhouse@v4
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          operating-system: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}

  tests:
    name: Tests
    runs-on: ${{ matrix.os }}
    needs: [smoke-tests]
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
      fail-fast: false
    steps:
      - uses: ansys/actions/tests-pytest@v4
        with:
          pytest-extra-args: "--cov=review_bot --cov-report=term --cov-report=html:.cov/html"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPEN_AI_TOKEN: ${{ secrets.OPEN_AI_TOKEN }}
          OPENAI_API_TYPE: "azure"
          OPENAI_API_BASE: ${{ secrets.OPENAI_API_BASE }}
          OPENAI_API_VERSION: "2023-05-15"
          OPENAI_MODEL: "gpt-4-32k-france-central"

  doc-build:
    name: Build documentation
    runs-on: ubuntu-latest
    needs: [doc-style]
    steps:
      - uses: ansys/actions/doc-build@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  build-library:
    name: "Build library"
    runs-on: ubuntu-latest
    needs: [doc-build, tests]
    steps:
      - uses: ansys/actions/build-library@v4
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  release:
    name: Release project
    if: ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags') }}
    needs: [build-library]
    runs-on: ubuntu-latest
    steps:
      - name: Release to the public PyPI repository
        uses: ansys/actions/release-pypi-public@v4
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          twine-username: "__token__"
          twine-token: ${{ secrets.PYPI_TOKEN }}

      - name: Release to GitHub
        uses: ansys/actions/release-github@v4
        with:
          library-name: ${{ env.LIBRARY_NAME }}

  doc-deploy-dev:
    name: "Deploy development documentation"
    runs-on: ubuntu-latest
    needs: [build-library]
    if: github.event_name == 'push' && !contains(github.ref, 'refs/tags')
    steps:
      - uses: ansys/actions/doc-deploy-dev@v4
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}

#   doc-deploy-stable:
#     name: "Deploy stable documentation"
#     runs-on: ubuntu-latest
#     needs: [release]
#     if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
#     steps:
#       - uses: ansys/actions/doc-deploy-stable@v4
#         with:
#           cname: ${{ env.DOCUMENTATION_CNAME }}
#           token: ${{ secrets.GITHUB_TOKEN }}
